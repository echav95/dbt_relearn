{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "2024.12.20+6d69506", "generated_at": "2025-01-04T16:30:43.969571Z", "invocation_id": "44e684b8-c6b3-4ef7-ba03-9010d090502a", "env": {}}, "results": [{"status": "no-op", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:33.123995Z", "completed_at": "2025-01-04T16:30:33.123998Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:33.126690Z", "completed_at": "2025-01-04T16:30:33.126700Z"}], "thread_id": "Thread-46 (worker)", "execution_time": 0.009749174118041992, "adapter_response": {}, "message": "NO-OP", "failures": 0, "unique_id": "exposure.my_new_project.orders_report", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:33.159334Z", "completed_at": "2025-01-04T16:30:33.167814Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:33.169517Z", "completed_at": "2025-01-04T16:30:33.473186Z"}], "thread_id": "Thread-46 (worker)", "execution_time": 0.322249174118042, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-103e-0007-9783083e2a5a"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.my_new_project.stg_jaffle_shop_customers", "compiled": true, "compiled_code": "with\n\nsource as (\n    select * from ANALYTICS.DBT_ECHAVEZ.CUSTOMERS),\n\ncustomers as (\n      select \n        id as customer_id,\n        last_name as surname,\n        first_name as givenname,\n        first_name || ' ' || last_name as full_name \n      from source\n)\n\nselect *\nfrom customers", "relation_name": "ANALYTICS.dbt_echavez.stg_jaffle_shop_customers", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:33.131447Z", "completed_at": "2025-01-04T16:30:33.139770Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:33.142834Z", "completed_at": "2025-01-04T16:30:33.511470Z"}], "thread_id": "Thread-47 (worker)", "execution_time": 0.3885345458984375, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-0bd3-0007-9783083e18fa"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.my_new_project.customer_orders", "compiled": true, "compiled_code": "select \n    orders.id as order_id,\n    orders.user_id as customer_id,\n    last_name as surname,\n    first_name as givenname,\n    first_order_date,\n    order_count,\n    total_lifetime_value,\n    round(amount/100.0,2) as order_value_dollars,\n    orders.status as order_status,\n    payments.status as payment_status\nfrom ANALYTICS.DBT_ECHAVEZ.ORDERS as orders\njoin (\n      select \n        first_name || ' ' || last_name as name, \n        * \n      from ANALYTICS.DBT_ECHAVEZ.CUSTOMERS\n) customers\non orders.user_id = customers.id\n\njoin (\n\n    select \n        b.id as customer_id,\n        b.name as full_name,\n        b.last_name as surname,\n        b.first_name as givenname,\n        min(order_date) as first_order_date,\n        min(case when a.status NOT IN ('returned','return_pending') then order_date end) as first_non_returned_order_date,\n        max(case when a.status NOT IN ('returned','return_pending') then order_date end) as most_recent_non_returned_order_date,\n        COALESCE(max(user_order_seq),0) as order_count,\n        COALESCE(count(case when a.status != 'returned' then 1 end),0) as non_returned_order_count,\n        sum(case when a.status NOT IN ('returned','return_pending') then ROUND(c.amount/100.0,2) else 0 end) as total_lifetime_value,\n        sum(case when a.status NOT IN ('returned','return_pending') then ROUND(c.amount/100.0,2) else 0 end)/NULLIF(count(case when a.status NOT IN ('returned','return_pending') then 1 end),0) as avg_non_returned_order_value,\n        array_agg(distinct a.id) as order_ids\n\n    from (\n      select \n        row_number() over (partition by user_id order by order_date, id) as user_order_seq,\n        *\n      from ANALYTICS.DBT_ECHAVEZ.ORDERS\n    ) a\n\n    join ( \n      select \n        first_name || ' ' || last_name as name, \n        * \n      from ANALYTICS.DBT_ECHAVEZ.CUSTOMERS\n    ) b\n    on a.user_id = b.id\n\n    left outer join ANALYTICS.DBT_ECHAVEZ.PAYMENT c\n    on a.id = c.orderid\n\n    where a.status NOT IN ('pending') and c.status != 'fail'\n\n    group by b.id, b.name, b.last_name, b.first_name\n\n) customer_order_history\non orders.user_id = customer_order_history.customer_id\n\nleft outer join ANALYTICS.DBT_ECHAVEZ.PAYMENT payments\non orders.id = payments.orderid\n\nwhere payments.status != 'fail'", "relation_name": "ANALYTICS.dbt_echavez.customer_orders", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:33.134269Z", "completed_at": "2025-01-04T16:30:33.140699Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:33.146071Z", "completed_at": "2025-01-04T16:30:33.595110Z"}], "thread_id": "Thread-48 (worker)", "execution_time": 0.4716930389404297, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-103e-0007-9783083e2a56"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.my_new_project.customer_orderz", "compiled": true, "compiled_code": "-- Yuji\n-- I love you baby\n-- Add you please\n\nwith \n\norders as (\n    select *\n    FROM ANALYTICS.DBT_ECHAVEZ.ORDERS\n),\n\ncustomers as (\n    select *\n    FROM ANALYTICS.DBT_ECHAVEZ.CUSTOMERS\n),\n\npayment as (\n    select *\n    FROM ANALYTICS.DBT_ECHAVEZ.PAYMENT\n),\n\npaid_orders as (select Orders.ID as order_id,\n    Orders.USER_ID\tas customer_id,\n    Orders.ORDER_DATE AS order_placed_at,\n        Orders.STATUS AS order_status,\n    p.total_amount_paid,\n    p.payment_finalized_date,\n    C.FIRST_NAME    as customer_first_name,\n        C.LAST_NAME as customer_last_name\nFROM orders as Orders\nleft join (select ORDERID as order_id, max(CREATED) as payment_finalized_date, sum(AMOUNT) / 100.0 as total_amount_paid\n        from payment\n        where STATUS <> 'fail'\n        group by 1) p ON orders.ID = p.order_id\nleft join raw.jaffle_shop.customers C on orders.USER_ID = C.ID ),\n\ncustomer_orders \nas (select C.ID as customer_id\n    , min(ORDER_DATE) as first_order_date\n    , max(ORDER_DATE) as most_recent_order_date\n    , count(ORDERS.ID) AS number_of_orders\nfrom customers C \nleft join raw.jaffle_shop.orders as Orders\non orders.USER_ID = C.ID \ngroup by 1)\n\nselect\np.*,\nROW_NUMBER() OVER (ORDER BY p.order_id) as transaction_seq,\nROW_NUMBER() OVER (PARTITION BY customer_id ORDER BY p.order_id) as customer_sales_seq,\nCASE WHEN c.first_order_date = p.order_placed_at\nTHEN 'new'\nELSE 'return' END as nvsr,\nsum(total_amount_paid) over (partition by p.customer_id order by p.order_placed_at) as customer_lifetime_value,\nc.first_order_date as fdos\nFROM paid_orders p\nleft join customer_orders as c USING (customer_id)\nORDER BY order_id", "relation_name": "ANALYTICS.dbt_echavez.customer_orderz", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:33.137024Z", "completed_at": "2025-01-04T16:30:33.141744Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:33.148491Z", "completed_at": "2025-01-04T16:30:33.747086Z"}], "thread_id": "Thread-49 (worker)", "execution_time": 0.6227450370788574, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-103e-0007-9783083e2a62"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.my_new_project.oooops", "compiled": true, "compiled_code": "SELECT\n  DATE_TRUNC('day', created_at) AS metric_time__day\n  , MIN(minimum_nights) AS minimum_nights\nFROM ANALYTICS.dbt_echavez.dim_listings_w_host listings_with_host_src_10000\nGROUP BY\n  DATE_TRUNC('day', created_at)", "relation_name": "ANALYTICS.dbt_echavez.oooops", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:33.165167Z", "completed_at": "2025-01-04T16:30:33.169104Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:33.174623Z", "completed_at": "2025-01-04T16:30:33.776877Z"}], "thread_id": "Thread-51 (worker)", "execution_time": 0.6213741302490234, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-0bd3-0007-9783083e1902"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.my_new_project.stg_jaffle_shop_payments", "compiled": true, "compiled_code": "with \nsource as (\n    select * from ANALYTICS.DBT_ECHAVEZ.PAYMENT),\npayments as (\n    select\n        id as payment_id,\n        orderid as order_id,\n        status as payment_status,\n        round(amount/100.0,2) as payment_amount\n\n    from source\n)\n\nselect * \nfrom payments", "relation_name": "ANALYTICS.dbt_echavez.stg_jaffle_shop_payments", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:33.162244Z", "completed_at": "2025-01-04T16:30:33.168589Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:33.172074Z", "completed_at": "2025-01-04T16:30:33.826495Z"}], "thread_id": "Thread-50 (worker)", "execution_time": 0.673067569732666, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-103e-0007-9783083e2a66"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.my_new_project.stg_jaffle_shop_orders", "compiled": true, "compiled_code": "with\nsource as (\n    select * from ANALYTICS.DBT_ECHAVEZ.ORDERS),\norders as (\n      select \n        id as order_id,\n        user_id as customer_id,\n        order_date as order_date,\n        status as order_status,\n        case when order_status NOT IN ('returned','return_pending') then order_date end as valid_order_date,\n        row_number() over (partition by user_id order by order_date, id) as user_order_seq\n      from source\n    )\n\nselect *\nfrom orders", "relation_name": "ANALYTICS.dbt_echavez.stg_jaffle_shop_orders", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:33.750818Z", "completed_at": "2025-01-04T16:30:33.756892Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:33.757324Z", "completed_at": "2025-01-04T16:30:33.912858Z"}], "thread_id": "Thread-49 (worker)", "execution_time": 0.16294145584106445, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-0bd3-0007-9783083e190e"}, "message": null, "failures": 0, "unique_id": "test.my_new_project.dbt_expectations_source_expect_column_distinct_count_to_equal_ANALYTICS_listings_room_type__4.93688b22aa", "compiled": true, "compiled_code": "\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \ncount(distinct room_type) = 4\n as expression\n\n\n    from ANALYTICS.DBT_ECHAVEZ.raw_listings\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:33.783578Z", "completed_at": "2025-01-04T16:30:33.789160Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:33.789567Z", "completed_at": "2025-01-04T16:30:33.949037Z"}], "thread_id": "Thread-51 (worker)", "execution_time": 0.16641998291015625, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-103e-0007-9783083e2a72"}, "message": null, "failures": 0, "unique_id": "test.my_new_project.dbt_expectations_source_expect_column_values_to_match_regex_ANALYTICS_listings_price___0_9_0_9_.e0926fe11a", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n\n\n    \nregexp_instr(price, '^\\\\$[0-9][0-9\\\\.]+$', 1, 1, 0, '')\n\n\n > 0\n as expression\n\n\n    from ANALYTICS.DBT_ECHAVEZ.raw_listings\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:33.830363Z", "completed_at": "2025-01-04T16:30:33.831271Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:33.831689Z", "completed_at": "2025-01-04T16:30:34.045658Z"}], "thread_id": "Thread-50 (worker)", "execution_time": 0.21614527702331543, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-0bd3-0007-9783083e1912"}, "message": null, "failures": 0, "unique_id": "test.my_new_project.pokemon_test", "compiled": true, "compiled_code": "SELECT *\nFROM pokemon_battle\nWHERE name = 'Bobby'", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:33.916054Z", "completed_at": "2025-01-04T16:30:33.919483Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:33.919927Z", "completed_at": "2025-01-04T16:30:34.168342Z"}], "thread_id": "Thread-49 (worker)", "execution_time": 0.2532181739807129, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-103e-0007-9783083e2a76"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.my_new_project.dim_hosts_cleansed", "compiled": true, "compiled_code": "\nWITH  __dbt__cte__src_hosts as (\nWITH raw_hosts AS (\n SELECT\n *\n FROM\n ANALYTICS.DBT_ECHAVEZ.raw_hosts\n)\nSELECT\n id AS host_id,\n NAME AS host_name,\n is_superhost,\n created_at,\n updated_at\nFROM\n raw_hosts\n), src_hosts AS (\n SELECT\n \n *\n FROM\n __dbt__cte__src_hosts\n)\nSELECT\n host_id,\n NVL(\n host_name,\n 'Anonymous'\n ) AS host_name,\n is_superhost,\n created_at,\n updated_at\nFROM\n src_hosts", "relation_name": "ANALYTICS.dbt_echavez.dim_hosts_cleansed", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:34.048906Z", "completed_at": "2025-01-04T16:30:34.051022Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:34.051422Z", "completed_at": "2025-01-04T16:30:34.502407Z"}], "thread_id": "Thread-50 (worker)", "execution_time": 0.45436930656433105, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-103e-0007-9783083e2a7a"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.my_new_project.int_orders", "compiled": true, "compiled_code": "with\n\norders as (\n    select * from ANALYTICS.dbt_echavez.stg_jaffle_shop_orders\n),\n\npayments as (\n    select * from ANALYTICS.dbt_echavez.stg_jaffle_shop_payments\n    where payment_status != 'fail'\n),\norder_totals as (\n    select\n        order_id,\n        payment_status,\n        sum(payment_amount) as order_value_dollars\n    from payments\n    group by 1, 2\n),\n\norder_values_joined as (\n    select \n        orders.*,\n        order_totals.payment_status,\n        order_totals.order_value_dollars\n    from orders\n    left join order_totals\n        on orders.order_id = order_totals.order_id\n)\n\nselect * from order_values_joined", "relation_name": "ANALYTICS.dbt_echavez.int_orders", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:33.515341Z", "completed_at": "2025-01-04T16:30:33.659491Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:33.660957Z", "completed_at": "2025-01-04T16:30:34.698504Z"}], "thread_id": "Thread-47 (worker)", "execution_time": 1.1840574741363525, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-0bd3-0007-9783083e190a"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.my_new_project.time_spine_hourly", "compiled": true, "compiled_code": "\n\nwith hours as (\n\n    \n\n\n    \n\n\n    with rawdata as (\n\n        \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n     + \n    \n    p8.generated_number * power(2, 8)\n     + \n    \n    p9.generated_number * power(2, 9)\n     + \n    \n    p10.generated_number * power(2, 10)\n     + \n    \n    p11.generated_number * power(2, 11)\n     + \n    \n    p12.generated_number * power(2, 12)\n     + \n    \n    p13.generated_number * power(2, 13)\n     + \n    \n    p14.generated_number * power(2, 14)\n     + \n    \n    p15.generated_number * power(2, 15)\n     + \n    \n    p16.generated_number * power(2, 16)\n     + \n    \n    p17.generated_number * power(2, 17)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n     cross join \n    \n    p as p11\n     cross join \n    \n    p as p12\n     cross join \n    \n    p as p13\n     cross join \n    \n    p as p14\n     cross join \n    \n    p as p15\n     cross join \n    \n    p as p16\n     cross join \n    \n    p as p17\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 219168\n    order by generated_number\n\n\n\n    ),\n\n    all_periods as (\n\n        select (\n            \n\n    dateadd(\n        hour,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2000','mm/dd/yyyy')\n        )\n\n\n        ) as date_hour\n        from rawdata\n\n    ),\n\n    filtered as (\n\n        select *\n        from all_periods\n        where date_hour <= to_date('01/01/2025','mm/dd/yyyy')\n\n    )\n\n    select * from filtered\n\n\n\n),\n\nfinal as (\n    select cast(date_hour as timestamp) as date_hour\n    from hours\n)\n\nselect * from final\n-- filter the time spine to a specific range\nwhere date_hour < dateadd(day, 30, current_timestamp())\n-- and date_day > dateadd(year, -4, current_timestamp())", "relation_name": "ANALYTICS.dbt_echavez.time_spine_hourly", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:34.567606Z", "completed_at": "2025-01-04T16:30:34.588656Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:34.589719Z", "completed_at": "2025-01-04T16:30:34.865838Z"}], "thread_id": "Thread-50 (worker)", "execution_time": 0.3229649066925049, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-0bd3-0007-9783083e1926"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.my_new_project.dim_listings_cleansed", "compiled": true, "compiled_code": "\nWITH  __dbt__cte__src_listings as (\nWITH raw_listings AS (\n SELECT\n *\n FROM\n ANALYTICS.DBT_ECHAVEZ.raw_listings\n)\nSELECT\n id AS listing_id,\n name AS listing_name,\n listing_url,\n room_type,\n minimum_nights,\n host_id,\n price AS price_str,\n created_at,\n updated_at\nFROM\n raw_listings\n), src_listings AS (\n SELECT\n *\n FROM\n __dbt__cte__src_listings\n)\nSELECT\n listing_id,\n listing_name,\n room_type,\n CASE\n WHEN minimum_nights = 0 THEN 1\n ELSE minimum_nights\n END AS minimum_nights,\n host_id,\n REPLACE(\n price_str,\n '$'\n ) :: NUMBER(\n 10,\n 2\n ) AS price,\n created_at,\n updated_at\nFROM\n src_listings", "relation_name": "ANALYTICS.dbt_echavez.dim_listings_cleansed", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:34.869764Z", "completed_at": "2025-01-04T16:30:34.877405Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:34.877835Z", "completed_at": "2025-01-04T16:30:35.059848Z"}], "thread_id": "Thread-50 (worker)", "execution_time": 0.19098782539367676, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-103e-0007-9783083e2a96"}, "message": null, "failures": 0, "unique_id": "test.my_new_project.accepted_values_dim_listings_cleansed_room_type__Entire_home_apt__Private_room__Shared_room__Hotel_room.a95127e3af", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        room_type as value_field,\n        count(*) as n_records\n\n    from ANALYTICS.dbt_echavez.dim_listings_cleansed\n    group by room_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Entire home/apt','Private room','Shared room','Hotel room'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:34.702284Z", "completed_at": "2025-01-04T16:30:34.704819Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:34.705238Z", "completed_at": "2025-01-04T16:30:35.133984Z"}], "thread_id": "Thread-47 (worker)", "execution_time": 0.4325706958770752, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-103e-0007-9783083e2a8e"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.my_new_project.fct_customer__orders", "compiled": true, "compiled_code": "-- Import CTEs\nwith\n\ncustomers as (\n    select * from ANALYTICS.dbt_echavez.stg_jaffle_shop_customers\n),\n\norders as (\n    select * from ANALYTICS.dbt_echavez.int_orders\n),\n-- \n\ncustomer_orders as (\n    select\n        orders.*,\n        customers.full_name,\n        customers.surname,\n        customers.givenname,\n        -- customer level aggregation\n        min(orders.order_date) over (partition by orders.customer_id) as customer_first_order_date,\n        min(orders.valid_order_date) over (partition by orders.customer_id) as customer_first_non_returned_order_date,\n        max(orders.valid_order_date) over (partition by orders.customer_id) as customer_most_recent_non_returned_order_date,\n        count(*) over (partition by orders.customer_id) as customer_order_count,\n        sum(nvl2(orders.valid_order_date, 1, 0)) over(partition by orders.customer_id) as customer_non_returned_order_count,\n        sum(nvl2(orders.valid_order_date, orders.order_value_dollars, 0)) over(partition by orders.customer_id) as customer_total_lifetime_value,\n        array_agg(distinct orders.order_id) over (partition by orders.customer_id) as customer_order_ids\n\n    from orders\n    inner join customers on orders.customer_id = customers.customer_id\n),\n\nadd_avg_order_values as (\n    select\n        *,\n        customer_total_lifetime_value/customer_non_returned_order_count as customer_avg_non_returned_order_value\n    from customer_orders\n),\n\n-- Final CTEs\n\nfinal as (\n\nselect \n    order_id,\n    customer_id,\n    surname,\n    givenname,\n    customer_first_order_date as first_order_date,\n    customer_order_count as order_count,\n    customer_total_lifetime_value as total_lifetime_value,\n    order_value_dollars,\n    order_status,\n    payment_status\nfrom add_avg_order_values\n\nORDER BY ORDER_ID\n)\n\nselect * from final", "relation_name": "ANALYTICS.dbt_echavez.fct_customer__orders", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:35.063082Z", "completed_at": "2025-01-04T16:30:35.065034Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:35.065444Z", "completed_at": "2025-01-04T16:30:35.413928Z"}], "thread_id": "Thread-50 (worker)", "execution_time": 0.35176849365234375, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-0bd3-0007-9783083e1936"}, "message": null, "failures": 0, "unique_id": "test.my_new_project.dim_listings_minimum_nights", "compiled": true, "compiled_code": "SELECT *\nFROM ANALYTICS.dbt_echavez.dim_listings_cleansed\nWHERE minimum_nights < 1\nLIMIT 10", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:33.952256Z", "completed_at": "2025-01-04T16:30:33.956911Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:33.957305Z", "completed_at": "2025-01-04T16:30:35.433964Z"}], "thread_id": "Thread-51 (worker)", "execution_time": 1.4825851917266846, "adapter_response": {"_message": "SUCCESS 0", "code": "SUCCESS", "rows_affected": 0, "query_id": "01b97d5e-0907-0bd3-0007-9783083e1932"}, "message": "SUCCESS 0", "failures": null, "unique_id": "model.my_new_project.fct_reviews", "compiled": true, "compiled_code": "\nWITH  __dbt__cte__src_reviews as (\nWITH raw_reviews AS (\n SELECT\n *\n FROM\n ANALYTICS.DBT_ECHAVEZ.raw_reviews\n)\nSELECT\n listing_id,\n date AS review_date,\n reviewer_name,\n comments AS review_text,\n sentiment AS review_sentiment\nFROM\n raw_reviews\n), src_reviews AS (\n SELECT * FROM __dbt__cte__src_reviews\n)\nSELECT *\n-- now depreecated; need to remove NULLS and blanks\n--   md5(cast(coalesce(cast(listing_id as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(review_date as TEXT), '_dbt_utils_surrogate_key_null_') || '-' || coalesce(cast(review_date as TEXT), '_dbt_utils_surrogate_key_null_') as TEXT)) as review_id, \nFROM src_reviews\nWHERE review_text is not null\n\n AND review_date > (select max(review_date) from ANALYTICS.dbt_echavez.fct_reviews)\n", "relation_name": "ANALYTICS.dbt_echavez.fct_reviews", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:35.140041Z", "completed_at": "2025-01-04T16:30:35.289647Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:35.290151Z", "completed_at": "2025-01-04T16:30:35.469364Z"}], "thread_id": "Thread-47 (worker)", "execution_time": 0.3302187919616699, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-103e-0007-9783083e2aa2"}, "message": null, "failures": 0, "unique_id": "test.my_new_project.no_nulls_in_dim_listings", "compiled": true, "compiled_code": "\n    SELECT * FROM ANALYTICS.dbt_echavez.dim_listings_cleansed WHERE\n    LISTING_ID IS NULL OR\n    LISTING_NAME IS NULL OR\n    ROOM_TYPE IS NULL OR\n    MINIMUM_NIGHTS IS NULL OR\n    HOST_ID IS NULL OR\n    PRICE IS NULL OR\n    CREATED_AT IS NULL OR\n    UPDATED_AT IS NULL OR\n    \n    FALSE\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:35.417338Z", "completed_at": "2025-01-04T16:30:35.423625Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:35.424097Z", "completed_at": "2025-01-04T16:30:35.564537Z"}], "thread_id": "Thread-50 (worker)", "execution_time": 0.1481785774230957, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-103e-0007-9783083e2aa6"}, "message": null, "failures": 0, "unique_id": "test.my_new_project.not_null_dim_listings_cleansed_host_id.084e4105be", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect host_id\nfrom ANALYTICS.dbt_echavez.dim_listings_cleansed\nwhere host_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:35.437573Z", "completed_at": "2025-01-04T16:30:35.442935Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:35.443353Z", "completed_at": "2025-01-04T16:30:35.587950Z"}], "thread_id": "Thread-51 (worker)", "execution_time": 0.15124201774597168, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-103e-0007-9783083e2aaa"}, "message": null, "failures": 0, "unique_id": "test.my_new_project.not_null_dim_listings_cleansed_listing_id.2da437bec9", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect listing_id\nfrom ANALYTICS.dbt_echavez.dim_listings_cleansed\nwhere listing_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:33.600462Z", "completed_at": "2025-01-04T16:30:33.600465Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:33.602713Z", "completed_at": "2025-01-04T16:30:35.618783Z"}], "thread_id": "Thread-48 (worker)", "execution_time": 2.0206871032714844, "adapter_response": {"_message": "INSERT 800", "code": "INSERT", "rows_affected": 800}, "message": "INSERT 800", "failures": null, "unique_id": "seed.my_new_project.pokemon", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:35.472408Z", "completed_at": "2025-01-04T16:30:35.477597Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:35.478007Z", "completed_at": "2025-01-04T16:30:35.643178Z"}], "thread_id": "Thread-47 (worker)", "execution_time": 0.17165470123291016, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-0bd3-0007-9783083e1942"}, "message": null, "failures": 0, "unique_id": "test.my_new_project.positive_value_dim_listings_cleansed_minimum_nights.78fa6fc313", "compiled": true, "compiled_code": "\nSELECT\n *\nFROM\n ANALYTICS.dbt_echavez.dim_listings_cleansed\nWHERE\n minimum_nights < 1\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:35.590978Z", "completed_at": "2025-01-04T16:30:35.596373Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:35.596781Z", "completed_at": "2025-01-04T16:30:35.753648Z"}], "thread_id": "Thread-51 (worker)", "execution_time": 0.16355061531066895, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-0bd3-0007-9783083e194a"}, "message": null, "failures": 0, "unique_id": "test.my_new_project.unique_dim_listings_cleansed_listing_id.930e4e859e", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    listing_id as unique_field,\n    count(*) as n_records\n\nfrom ANALYTICS.dbt_echavez.dim_listings_cleansed\nwhere listing_id is not null\ngroup by listing_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:35.567596Z", "completed_at": "2025-01-04T16:30:35.578079Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:35.578505Z", "completed_at": "2025-01-04T16:30:35.791254Z"}], "thread_id": "Thread-50 (worker)", "execution_time": 0.2245032787322998, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-0bd3-0007-9783083e1946"}, "message": null, "failures": 0, "unique_id": "test.my_new_project.relationships_dim_listings_cleansed_host_id__host_id__ref_dim_hosts_cleansed_.b53b94b2ad", "compiled": true, "compiled_code": "\n    \n    \n\nwith child as (\n    select host_id as from_field\n    from ANALYTICS.dbt_echavez.dim_listings_cleansed\n    where host_id is not null\n),\n\nparent as (\n    select host_id as to_field\n    from ANALYTICS.dbt_echavez.dim_hosts_cleansed\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:33.477177Z", "completed_at": "2025-01-04T16:30:33.625565Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:33.642911Z", "completed_at": "2025-01-04T16:30:35.867850Z"}], "thread_id": "Thread-46 (worker)", "execution_time": 2.391631841659546, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-103e-0007-9783083e2a6a"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.my_new_project.time_spine_daily", "compiled": true, "compiled_code": "\n\nwith days as (\n\n    \n\n\n    \n\n\n    with rawdata as (\n\n        \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n     + \n    \n    p8.generated_number * power(2, 8)\n     + \n    \n    p9.generated_number * power(2, 9)\n     + \n    \n    p10.generated_number * power(2, 10)\n     + \n    \n    p11.generated_number * power(2, 11)\n     + \n    \n    p12.generated_number * power(2, 12)\n     + \n    \n    p13.generated_number * power(2, 13)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n     cross join \n    \n    p as p11\n     cross join \n    \n    p as p12\n     cross join \n    \n    p as p13\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 9132\n    order by generated_number\n\n\n\n    ),\n\n    all_periods as (\n\n        select (\n            \n\n    dateadd(\n        day,\n        row_number() over (order by 1) - 1,\n        to_date('01/01/2000','mm/dd/yyyy')\n        )\n\n\n        ) as date_day\n        from rawdata\n\n    ),\n\n    filtered as (\n\n        select *\n        from all_periods\n        where date_day <= to_date('01/01/2025','mm/dd/yyyy')\n\n    )\n\n    select * from filtered\n\n\n\n),\n\nfinal as (\n    select cast(date_day as date) as date_day\n    from days\n)\n\nselect * from final\nwhere date_day > dateadd(year, -4, current_timestamp()) \n-- and date_hour < dateadd(day, 30, current_timestamp())", "relation_name": "ANALYTICS.dbt_echavez.time_spine_daily", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:35.646218Z", "completed_at": "2025-01-04T16:30:35.651671Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:35.652107Z", "completed_at": "2025-01-04T16:30:35.940973Z"}], "thread_id": "Thread-47 (worker)", "execution_time": 0.2956206798553467, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-103e-0007-9783083e2aae"}, "message": null, "failures": 0, "unique_id": "test.my_new_project.not_null_fct_customer__orders_customer_id.ab6eaf9941", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom ANALYTICS.dbt_echavez.fct_customer__orders\nwhere customer_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:35.622645Z", "completed_at": "2025-01-04T16:30:35.627662Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:35.628095Z", "completed_at": "2025-01-04T16:30:36.267995Z"}], "thread_id": "Thread-48 (worker)", "execution_time": 0.6462922096252441, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-0bd3-0007-9783083e194e"}, "message": null, "failures": 0, "unique_id": "test.my_new_project.count_greater_one_fct_customer__orders_order_id.9af7924e81", "compiled": true, "compiled_code": "\n\nselect count(order_id)\nfrom ANALYTICS.dbt_echavez.fct_customer__orders\nGROUP BY order_id\nHAVING count(order_id)>1\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:35.794691Z", "completed_at": "2025-01-04T16:30:35.796602Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:35.797022Z", "completed_at": "2025-01-04T16:30:36.285380Z"}], "thread_id": "Thread-50 (worker)", "execution_time": 0.49157142639160156, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-103e-0007-9783083e2ab6"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.my_new_project.pokemon_unclean", "compiled": true, "compiled_code": "SELECT *\nFROM ANALYTICS.dbt_echavez.pokemon", "relation_name": "ANALYTICS.dbt_echavez.pokemon_unclean", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:36.293503Z", "completed_at": "2025-01-04T16:30:36.295834Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:36.298941Z", "completed_at": "2025-01-04T16:30:36.678875Z"}], "thread_id": "Thread-48 (worker)", "execution_time": 0.3889129161834717, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-0bd3-0007-9783083e1962"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.my_new_project.pokemon_battle.v2", "compiled": true, "compiled_code": "WITH poke_data AS (\n    SELECT *\n    FROM ANALYTICS.dbt_echavez.pokemon_unclean\n    WHERE\n        name NOT LIKE '%Mega%'\n        AND name NOT LIKE '%Primal%'\n)\n\nSELECT\n    id,\n    name,\n    type1,\n    type2,\n    total,\n    hp,\n    attack,\n    defense,\n    spatk,\n    spdef,\n    speed,\n    legendary,\n    generation\nFROM poke_data", "relation_name": "ANALYTICS.dbt_echavez.pokemon_battle_v2", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:35.756811Z", "completed_at": "2025-01-04T16:30:35.762884Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:35.763298Z", "completed_at": "2025-01-04T16:30:36.727849Z"}], "thread_id": "Thread-51 (worker)", "execution_time": 0.9719259738922119, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-103e-0007-9783083e2ac6"}, "message": null, "failures": 0, "unique_id": "test.my_new_project.unique_fct_customer__orders_order_id.fda7583205", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    order_id as unique_field,\n    count(*) as n_records\n\nfrom ANALYTICS.dbt_echavez.fct_customer__orders\nwhere order_id is not null\ngroup by order_id\nhaving count(*) > 1\n\n\n", "relation_name": "ANALYTICS.dbt_echavez_dbt_test__audit.unique_fct_customer__orders_order_id", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:35.873176Z", "completed_at": "2025-01-04T16:30:35.876239Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:35.876802Z", "completed_at": "2025-01-04T16:30:36.735016Z"}], "thread_id": "Thread-46 (worker)", "execution_time": 0.8630568981170654, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-0bd3-0007-9783083e1952"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.my_new_project.dim_listings_w_host", "compiled": true, "compiled_code": "WITH\nl AS (\n SELECT\n *\n FROM\n ANALYTICS.dbt_echavez.dim_listings_cleansed\n),\nh AS (\n SELECT *\n FROM ANALYTICS.dbt_echavez.dim_hosts_cleansed\n)\nSELECT\n l.listing_id,\n l.listing_name,\n l.room_type,\n l.minimum_nights,\n l.price,\n l.host_id,\n h.host_name,\n h.is_superhost as host_is_superhost,\n l.created_at,\n GREATEST(l.updated_at, h.updated_at) as updated_at\nFROM l\nLEFT JOIN h ON (h.host_id = l.host_id)", "relation_name": "ANALYTICS.dbt_echavez.dim_listings_w_host", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:36.683197Z", "completed_at": "2025-01-04T16:30:36.688913Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:36.689346Z", "completed_at": "2025-01-04T16:30:36.885645Z"}], "thread_id": "Thread-50 (worker)", "execution_time": 0.20336461067199707, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-0bd3-0007-9783083e1972"}, "message": null, "failures": 0, "unique_id": "test.my_new_project.pokemon_wrong_pokemon_battle_v2_name.8d6f522c58", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM ANALYTICS.dbt_echavez.pokemon_battle_v2\nWHERE name = 'Fred'\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:36.291292Z", "completed_at": "2025-01-04T16:30:36.295369Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:36.296269Z", "completed_at": "2025-01-04T16:30:36.923606Z"}], "thread_id": "Thread-47 (worker)", "execution_time": 0.634089469909668, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-0bd3-0007-9783083e196e"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.my_new_project.pokemon_battle.v1", "compiled": true, "compiled_code": "WITH poke_data AS (\n    SELECT *\n    FROM ANALYTICS.dbt_echavez.pokemon_unclean\n    WHERE\n        name NOT LIKE '%Mega%'\n        AND name NOT LIKE '%Primal%'\n)\n\nSELECT\n    id,\n    name,\n    type1,\n    type2,\n    total,\n    hp,\n    attack,\n    defense,\n    spatk,\n    spdef,\n    speed,\n    legendary,\n    generation,\n    CASE\n        WHEN generation = 1 THEN CAST('1996-02-27' AS DATE)\n        WHEN generation = 2 THEN CAST('1999-11-21' AS DATE)\n        WHEN generation = 3 THEN CAST('2003-07-18' AS DATE)\n        WHEN generation = 4 THEN CAST('2006-09-28' AS DATE)\n    END AS release_date\nFROM poke_data", "relation_name": "ANALYTICS.dbt_echavez.pokemon_battle", "batch_results": null}, {"status": "warn", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:36.742725Z", "completed_at": "2025-01-04T16:30:36.761506Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:36.763050Z", "completed_at": "2025-01-04T16:30:36.992901Z"}], "thread_id": "Thread-48 (worker)", "execution_time": 0.25292491912841797, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-0bd3-0007-9783083e197a"}, "message": "Got 1 result, configured to warn if != 0", "failures": 1, "unique_id": "test.my_new_project.dbt_expectations_expect_column_max_to_be_between_dim_listings_w_host_price__5000.a6b4bd50d9", "compiled": true, "compiled_code": "\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and max(price) <= 5000\n)\n as expression\n\n\n    from ANALYTICS.dbt_echavez.dim_listings_w_host\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:36.749707Z", "completed_at": "2025-01-04T16:30:36.762492Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:36.766581Z", "completed_at": "2025-01-04T16:30:37.008961Z"}], "thread_id": "Thread-51 (worker)", "execution_time": 0.2685072422027588, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-0bd3-0007-9783083e1976"}, "message": null, "failures": 0, "unique_id": "test.my_new_project.dbt_expectations_expect_column_quantile_values_to_be_between_dim_listings_w_host_price__500__50__0_99.175c4539d2", "compiled": true, "compiled_code": "\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and percentile_cont(0.99) within group (order by price) >= 50 and percentile_cont(0.99) within group (order by price) <= 500\n)\n as expression\n\n\n    from ANALYTICS.dbt_echavez.dim_listings_w_host\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:36.895630Z", "completed_at": "2025-01-04T16:30:36.906208Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:36.906749Z", "completed_at": "2025-01-04T16:30:37.089579Z"}], "thread_id": "Thread-50 (worker)", "execution_time": 0.19708251953125, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-103e-0007-9783083e2ad2"}, "message": null, "failures": 0, "unique_id": "test.my_new_project.dbt_expectations_expect_table_row_count_to_equal_other_table_dim_listings_w_host_source_ANALYTICS_listings_.880ad83f4a", "compiled": true, "compiled_code": "\n    with a as (\n        \n    select\n        \n        count(*) as expression\n    from\n        ANALYTICS.dbt_echavez.dim_listings_w_host\n    \n\n    ),\n    b as (\n        \n    select\n        \n        count(*) * 1 as expression\n    from\n        ANALYTICS.DBT_ECHAVEZ.raw_listings\n    \n\n    ),\n    final as (\n\n        select\n            \n            a.expression,\n            b.expression as compare_expression,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0)) as expression_difference,\n            abs(coalesce(a.expression, 0) - coalesce(b.expression, 0))/\n                nullif(a.expression * 1.0, 0) as expression_difference_percent\n        from\n        \n            a cross join b\n        \n    )\n    -- DEBUG:\n    -- select * from final\n    select\n        *\n    from final\n    where\n        \n        expression_difference > 0.0\n        \n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:36.755265Z", "completed_at": "2025-01-04T16:30:36.886562Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:36.889247Z", "completed_at": "2025-01-04T16:30:37.100121Z"}], "thread_id": "Thread-46 (worker)", "execution_time": 0.35924577713012695, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-0bd3-0007-9783083e1982"}, "message": null, "failures": 0, "unique_id": "test.my_new_project.dbt_expectations_expect_column_values_to_be_of_type_dim_listings_w_host_price__number.b31806067b", "compiled": true, "compiled_code": "with relation_columns as (\n\n        \n        select\n            cast('LISTING_ID' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('LISTING_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('ROOM_TYPE' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('MINIMUM_NIGHTS' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('PRICE' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HOST_ID' as TEXT) as relation_column,\n            cast('NUMBER' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HOST_NAME' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('HOST_IS_SUPERHOST' as TEXT) as relation_column,\n            cast('VARCHAR' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('CREATED_AT' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        union all\n        \n        select\n            cast('UPDATED_AT' as TEXT) as relation_column,\n            cast('TIMESTAMP_NTZ' as TEXT) as relation_column_type\n        \n        \n    ),\n    test_data as (\n\n        select\n            *\n        from\n            relation_columns\n        where\n            relation_column = 'PRICE'\n            and\n            relation_column_type not in ('NUMBER')\n\n    )\n    select *\n    from test_data", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:37.014263Z", "completed_at": "2025-01-04T16:30:37.019825Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:37.020255Z", "completed_at": "2025-01-04T16:30:37.233888Z"}], "thread_id": "Thread-51 (worker)", "execution_time": 0.22080683708190918, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-103e-0007-9783083e2ae2"}, "message": null, "failures": 0, "unique_id": "test.my_new_project.pokemon_wrong_pokemon_battle_v1_name.9f9ac493e2", "compiled": true, "compiled_code": "\n\nSELECT *\nFROM ANALYTICS.dbt_echavez.pokemon_battle\nWHERE name = 'Fred'\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:36.927605Z", "completed_at": "2025-01-04T16:30:36.929732Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:36.930160Z", "completed_at": "2025-01-04T16:30:37.346551Z"}], "thread_id": "Thread-47 (worker)", "execution_time": 0.4198286533355713, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-103e-0007-9783083e2ad6"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.my_new_project.pokemon_remove_dupes", "compiled": true, "compiled_code": "with poke as (\n    select\n        *,\n        ROW_NUMBER() over (partition by id order by id) as rn\n    from ANALYTICS.dbt_echavez.pokemon_battle_v2\n    order by id\n)\n\nselect *\nfrom poke\nwhere rn = 1", "relation_name": "ANALYTICS.dbt_echavez.pokemon_remove_dupes", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:36.998483Z", "completed_at": "2025-01-04T16:30:37.002201Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:37.004036Z", "completed_at": "2025-01-04T16:30:37.352488Z"}], "thread_id": "Thread-48 (worker)", "execution_time": 0.3550751209259033, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-103e-0007-9783083e2ade"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.my_new_project.test", "compiled": true, "compiled_code": "SELECT *\nFROM ANALYTICS.dbt_echavez.pokemon_battle_v2", "relation_name": "ANALYTICS.dbt_echavez.test", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:34.177000Z", "completed_at": "2025-01-04T16:30:34.178743Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:34.179182Z", "completed_at": "2025-01-04T16:30:37.600196Z"}], "thread_id": "Thread-49 (worker)", "execution_time": 3.424060344696045, "adapter_response": {"_message": "SUCCESS 0", "code": "SUCCESS", "rows_affected": 0, "query_id": "01b97d5e-0907-0bd3-0007-9783083e1986"}, "message": "SUCCESS 0", "failures": null, "unique_id": "snapshot.my_new_project.scd_raw_listings", "compiled": true, "compiled_code": "\n\nselect * FROM ANALYTICS.DBT_ECHAVEZ.raw_listings", "relation_name": "ANALYTICS.dev.scd_raw_listings", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:37.237340Z", "completed_at": "2025-01-04T16:30:37.237343Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:37.237728Z", "completed_at": "2025-01-04T16:30:38.269665Z"}], "thread_id": "Thread-50 (worker)", "execution_time": 1.033261775970459, "adapter_response": {"_message": "SUCCESS 8", "code": "SUCCESS", "rows_affected": 8, "query_id": "01b97d5e-0907-103e-0007-9783083e2aee"}, "message": null, "failures": 0, "unique_id": "unit_test.my_new_project.pokemon_strength.pokemon_strength_check", "compiled": true, "compiled_code": "With  __dbt__cte__pokemon_battle as (\n\n-- Fixture for pokemon_battle\nselect \n    \n        try_cast('1' as NUMBER(38,0))\n     as id, try_cast(null as character varying(16777216)) as name, try_cast(null as character varying(16777216)) as type1, try_cast(null as character varying(16777216)) as type2, try_cast(null as NUMBER(38,0)) as total, try_cast(null as NUMBER(38,0)) as hp, \n    \n        try_cast('49' as NUMBER(38,0))\n     as attack, try_cast(null as NUMBER(38,0)) as defense, try_cast(null as NUMBER(38,0)) as spatk, try_cast(null as NUMBER(38,0)) as spdef, try_cast(null as NUMBER(38,0)) as speed, try_cast(null as BOOLEAN) as legendary, try_cast(null as NUMBER(38,0)) as generation, try_cast(null as DATE) as release_date\nunion all\nselect \n    \n        try_cast('2' as NUMBER(38,0))\n     as id, try_cast(null as character varying(16777216)) as name, try_cast(null as character varying(16777216)) as type1, try_cast(null as character varying(16777216)) as type2, try_cast(null as NUMBER(38,0)) as total, try_cast(null as NUMBER(38,0)) as hp, \n    \n        try_cast('62' as NUMBER(38,0))\n     as attack, try_cast(null as NUMBER(38,0)) as defense, try_cast(null as NUMBER(38,0)) as spatk, try_cast(null as NUMBER(38,0)) as spdef, try_cast(null as NUMBER(38,0)) as speed, try_cast(null as BOOLEAN) as legendary, try_cast(null as NUMBER(38,0)) as generation, try_cast(null as DATE) as release_date\nunion all\nselect \n    \n        try_cast('3' as NUMBER(38,0))\n     as id, try_cast(null as character varying(16777216)) as name, try_cast(null as character varying(16777216)) as type1, try_cast(null as character varying(16777216)) as type2, try_cast(null as NUMBER(38,0)) as total, try_cast(null as NUMBER(38,0)) as hp, \n    \n        try_cast('82' as NUMBER(38,0))\n     as attack, try_cast(null as NUMBER(38,0)) as defense, try_cast(null as NUMBER(38,0)) as spatk, try_cast(null as NUMBER(38,0)) as spdef, try_cast(null as NUMBER(38,0)) as speed, try_cast(null as BOOLEAN) as legendary, try_cast(null as NUMBER(38,0)) as generation, try_cast(null as DATE) as release_date\nunion all\nselect \n    \n        try_cast('4' as NUMBER(38,0))\n     as id, try_cast(null as character varying(16777216)) as name, try_cast(null as character varying(16777216)) as type1, try_cast(null as character varying(16777216)) as type2, try_cast(null as NUMBER(38,0)) as total, try_cast(null as NUMBER(38,0)) as hp, \n    \n        try_cast('52' as NUMBER(38,0))\n     as attack, try_cast(null as NUMBER(38,0)) as defense, try_cast(null as NUMBER(38,0)) as spatk, try_cast(null as NUMBER(38,0)) as spdef, try_cast(null as NUMBER(38,0)) as speed, try_cast(null as BOOLEAN) as legendary, try_cast(null as NUMBER(38,0)) as generation, try_cast(null as DATE) as release_date\n), battle As (Select\n    id,\n    name,\n    total,\n    attack,\n    release_date,\n    Case\n        When attack > 60 Then 'Really Strong'\n        When attack > 50 Then 'Strong'\n        Else 'Weak'\n    End As power,\n    datediff('day', release_date, convert_timezone('UTC', current_timestamp()))\n        As days_since_released\nFrom __dbt__cte__pokemon_battle\n)\n\nSelect *\nFrom battle", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:38.272920Z", "completed_at": "2025-01-04T16:30:38.272922Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:38.273304Z", "completed_at": "2025-01-04T16:30:39.360287Z"}], "thread_id": "Thread-50 (worker)", "execution_time": 1.088310956954956, "adapter_response": {"_message": "SUCCESS 2", "code": "SUCCESS", "rows_affected": 2, "query_id": "01b97d5e-0907-0bd3-0007-9783083e199a"}, "message": null, "failures": 0, "unique_id": "unit_test.my_new_project.pokemon_strength.test_days_since_ordered", "compiled": true, "compiled_code": "With  __dbt__cte__pokemon_battle as (\n\n-- Fixture for pokemon_battle\nselect try_cast(null as NUMBER(38,0)) as id, try_cast(null as character varying(16777216)) as name, try_cast(null as character varying(16777216)) as type1, try_cast(null as character varying(16777216)) as type2, try_cast(null as NUMBER(38,0)) as total, try_cast(null as NUMBER(38,0)) as hp, try_cast(null as NUMBER(38,0)) as attack, try_cast(null as NUMBER(38,0)) as defense, try_cast(null as NUMBER(38,0)) as spatk, try_cast(null as NUMBER(38,0)) as spdef, try_cast(null as NUMBER(38,0)) as speed, try_cast(null as BOOLEAN) as legendary, try_cast(null as NUMBER(38,0)) as generation, \n    \n        try_cast('1996-02-27' as DATE)\n     as release_date\n), battle As (Select\n    id,\n    name,\n    total,\n    attack,\n    release_date,\n    Case\n        When attack > 60 Then 'Really Strong'\n        When attack > 50 Then 'Strong'\n        Else 'Weak'\n    End As power,\n    datediff('day', release_date, date('2024-09-06'))\n        As days_since_released\nFrom __dbt__cte__pokemon_battle\n)\n\nSelect *\nFrom battle", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:39.363425Z", "completed_at": "2025-01-04T16:30:39.365752Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:39.366168Z", "completed_at": "2025-01-04T16:30:39.697367Z"}], "thread_id": "Thread-50 (worker)", "execution_time": 0.33479928970336914, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-0bd3-0007-9783083e199e"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.my_new_project.pokemon_strength", "compiled": true, "compiled_code": "With battle As (Select\n    id,\n    name,\n    total,\n    attack,\n    release_date,\n    Case\n        When attack > 60 Then 'Really Strong'\n        When attack > 50 Then 'Strong'\n        Else 'Weak'\n    End As power,\n    datediff('day', release_date, convert_timezone('UTC', current_timestamp()))\n        As days_since_released\nFrom ANALYTICS.dbt_echavez.pokemon_battle\n)\n\nSelect *\nFrom battle", "relation_name": "ANALYTICS.dbt_echavez.pokemon_strength", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:39.717350Z", "completed_at": "2025-01-04T16:30:39.719979Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:39.720427Z", "completed_at": "2025-01-04T16:30:42.535033Z"}], "thread_id": "Thread-51 (worker)", "execution_time": 2.8185884952545166, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-0bd3-0007-9783083e19a2"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.my_new_project.python_test", "compiled": true, "compiled_code": "def model (dbt, session):\n    \n    poke_str = dbt.ref(\"pokemon_strength\")\n\n    return poke_str\n\n\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\ndef ref(*args, **kwargs):\n    refs = {\"pokemon_strength\": \"ANALYTICS.dbt_echavez.pokemon_strength\"}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n\ndef source(*args, dbt_load_df_function):\n    sources = {}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n\nconfig_dict = {}\n\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"ANALYTICS\"\n    schema = \"dbt_echavez\"\n    identifier = \"python_test\"\n    \n    def __repr__(self):\n        return 'ANALYTICS.dbt_echavez.python_test'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = False\n\n# COMMAND ----------\n\n\n", "relation_name": "ANALYTICS.dbt_echavez.python_test", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-04T16:30:42.539343Z", "completed_at": "2025-01-04T16:30:42.541398Z"}, {"name": "execute", "started_at": "2025-01-04T16:30:42.541822Z", "completed_at": "2025-01-04T16:30:42.937984Z"}], "thread_id": "Thread-47 (worker)", "execution_time": 0.39955592155456543, "adapter_response": {"_message": "SUCCESS 1", "code": "SUCCESS", "rows_affected": 1, "query_id": "01b97d5e-0907-103e-0007-9783083e2b02"}, "message": "SUCCESS 1", "failures": null, "unique_id": "model.my_new_project.poke_stadium_query", "compiled": true, "compiled_code": "select *\nfrom ANALYTICS.dbt_echavez.python_test", "relation_name": "ANALYTICS.dbt_echavez.poke_stadium_query", "batch_results": null}], "elapsed_time": 12.279100894927979, "args": {"log_format_file": "json", "printer_width": 80, "partial_parse": true, "quiet": false, "require_nested_cumulative_type_params": false, "populate_cache": true, "indirect_selection": "eager", "profiles_dir": "/usr/src/dbt-server-shared/.dbt", "skip_write_msgpack_if_exist": false, "use_fast_test_edges": false, "profile": "user", "project_dir": "/usr/src/develop/user-70403103921581/environment-70403103952892/repository-70403103938937", "introspect": true, "require_yaml_configuration_for_mf_time_spines": false, "use_colors": true, "favor_state": false, "select": [], "state_modified_compare_vars": false, "macro_debugging": false, "require_explicit_package_overrides_for_builtin_materializations": true, "write_json": true, "strict_mode": false, "export_saved_queries": false, "exclude_resource_types": [], "defer": false, "log_path": "/usr/src/dbt-server-shared/working_dir/ae112b51-dff0-4d8e-9269-0181604b0d04", "vars": {}, "which": "build", "log_level_file": "debug", "log_format": "json", "version_check": true, "warn_error_options": {"include": [], "exclude": []}, "require_resource_names_without_spaces": false, "use_colors_file": true, "exclude": [], "invocation_command": "dbt -A dbt_worker.app worker --loglevel=DEBUG --concurrency=2 --max-memory-per-child=500000", "partial_parse_file_diff": true, "skip_nodes_if_on_run_start_fails": false, "empty": false, "require_batched_execution_for_custom_microbatch_strategy": false, "send_anonymous_usage_stats": true, "include_saved_query": false, "show": false, "log_level": "info", "print": true, "static_parser": true, "cache_selected_only": false, "log_file_max_bytes": 0, "source_freshness_run_project_hooks": false, "show_resource_report": false, "resource_types": [], "state_modified_compare_more_unrendered_values": false}}